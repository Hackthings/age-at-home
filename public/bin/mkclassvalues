#!/bin/csh -fb

if ($?CLOUDANT_DATABASE) then
    setenv DB "$CLOUDANT_DATABASE"
else
    setenv DB "rough-fog"
endif

set classes = all
if ( $#argv > 0 ) then
    setenv DB "$argv[1]"
    if ( $#argv > 1 ) then
	set classes = $argv[2]
	if (-e ".classifiers-$classes.json") then
	    setenv CLASSIFIERS `jq ."$classes"\[\].name ".classifiers-$classes.json" | sed 's/"//g'`
	else if ($classes == "all" || $classes == "alchemy") then
            if ( ! -e "$DB-$classes.txt" || ( (-M "$ALLROWS") > (-M "$DB"-$classes.txt))) then
                $0:h/mkallclass $DB $classes
            endif
            setenv CLASSIFIERS `cat "$DB-$classes.txt"`
	else if ($#argv > 3) then
	    setenv CLASSIFIERS "$argv[2-]"
	    set classes = "misc"
	else
	    setenv CLASSIFIERS "$argv[2]"
	    set classes = "$argv[2]"
	endif
    endif
endif

setenv ALLROWS "$DB".csv
if (! -e "$ALLROWS" ) then
    echo "$ALLROWS does not exist; run $0:h/getjson2csv $ALLROWS:r"
    exit
endif

set vcolset = `csvstat -n "$ALLROWS" | awk '{ print $2 }' | egrep classifier_id`
set acolset = `csvstat -n "$ALLROWS" | awk '{ print $2 }' | egrep alchemy/text`

if ($?CLASSIFIERS) then
    set classifiers = ( $CLASSIFIERS )
else
    if ( ! -e "$DB-$classes.txt" || ( (-M "$ALLROWS") > (-M "$DB"-$classes.txt))) then
	$0:h/mkallclass $DB $classes
    endif
    set classifiers = ( `cat "$DB-$classes.txt"` )
endif

if ($#classifiers > 0 && ((-M "$ALLROWS") > (-M "$DB-$classes-values.csv"))) then
    echo "STAT: $0 - total $#classifiers"
    set colset = `csvstat -n "$ALLROWS" | awk '{ print $2 }'`
    set colnam = `echo $colset | sed "s/ /,/g"`

    set datetime = ( doc/year doc/month doc/day doc/hour doc/minute doc/second )
    set dtcolumns = `echo "$datetime" | sed "s/ /,/g"`

    echo "classifier,score,id,$dtcolumns" >! "$DB-$classes-values.csv"
    foreach i ( $classifiers )
	if ($i == \"\") continue

	echo -n "STAT: $0 - $i"
	echo "$colnam" >! "$i.csv"
	egrep ",$i," "$ALLROWS" >> "$i.csv"

	# check Alchemy results ; all lowercase (1 column)
	set vi = `echo $i | sed "s/\([a-z]\)*.*/\1/"`
	if ($vi != "") then
	    foreach j ( $acolset )
		csvcut -c "$j","$j:h/score","id","$dtcolumns" "$i.csv" | egrep "^$i," >> "$DB-$classes-values.csv"
		echo -n "."
	    end
	endif

	# only check VisualInsights when classifier is Upper case
	set vi = `echo $i | sed "s/\([A-Z]\)*.*/\1/"`
	if ($vi != "") then
	    foreach j ( $vcolset )
		csvcut -c "$j","$j:h/score","id","$dtcolumns" "$i.csv" | egrep "^$i," >> "$DB-$classes-values.csv"
		echo -n "."
	    end
	endif

	echo 
	rm "$i.csv"
    end
endif
