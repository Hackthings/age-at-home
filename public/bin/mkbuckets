#!/bin/csh

if ($?CLOUDANT_DATABASE) then
    setenv DB "$CLOUDANT_DATABASE"
else
    setenv DB "rough-fog"
endif

if ( $#argv > 0 ) then
    setenv ALLROWS "$argv[1]".csv
else
    setenv ALLROWS "$DB".csv
endif

if ( -e "$ALLROWS" ) then
    setenv ARBASE "$ALLROWS:r"

    if ( (! -e "$ARBASE"-buckets.csv ) || ((-M "$ALLROWS") > (-M "$ARBASE-buckets.csv"))) then
	set colset = `csvstat -n "$ALLROWS" | awk '{ print $2 }'`
	set colnam = `echo $colset | sed "s/ /,/g"`
	# note insertion of "id" in middle
	set datetime = ( doc/year doc/month doc/day id doc/hour doc/minute doc/second )
	set dtcolumns = `echo "$datetime" | sed "s/ /,/g"`

	echo "STAT: creating $ARBASE-buckets.csv"
	echo "interval,ampm,week,day,id" >! "$ARBASE"-buckets.csv

	# note utilization of gawk(1)
	csvcut -c "$dtcolumns" "$ALLROWS" | tail +2 | \
	    gawk -F, '{ m=$5*60+$6; m = m / 15; t=mktime(sprintf("%4d %2d %2d %2d %2d %2d", $1, $2, $3, $5, $6, $7)); printf "%d,%s,%s,%s,%s\n", m, strftime("%p",t),strftime("%U",t),strftime("%A",t), $4 }' >> "$ARBASE"-buckets.csv
    else
    	echo "STAT: $ARBASE-buckets.csv up-to-date"
    endif
else
    echo "$ALLROWS does not exist; run getjson2csv $ALLROWS:r"
endif
