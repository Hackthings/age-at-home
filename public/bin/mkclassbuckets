#!/bin/csh

if ($?CLOUDANT_DATABASE) then
    setenv DB "$CLOUDANT_DATABASE"
else
    setenv DB "rough-fog"
endif

if ( $#argv > 0 ) then
    setenv ALLROWS "$argv[1]".csv
    if ( $#argv > 1 ) then
        setenv CLASSIFIER "$argv[2]"
	if ($#argv > 2) then
	    setenv BUCKET "$argv[3]"
        endif
    endif
else
    setenv ALLROWS "$DB".csv
endif

if ( $?CLASSIFIER == 0) then
    set classifier = 'person'
else
    set classifier = $CLASSIFIER
endif

if ( $?BUCKET == 0) then
    # appropriate defaults are 'doc/hour'
    set bucket = 'doc/hour'
else
    # appropriate options are 'interval'
    set bucket = $BUCKET
endif

setenv ARBASE "$ALLROWS:r"
setenv OUTPUT "$ARBASE-$classifier-$bucket:t.csv"

if (! -e "$ALLROWS" ) then
    echo "$ALLROWS does not exist; run $0:h/getjson2csv $ALLROWS:r"
else if ( ! -e "$ARBASE-class-values.csv" ) then
    echo "$ARBASE-class-values.csv does not exist; run $0:h/mkclassvalues $ALLROWS:r"
else if ( ! -e "$ARBASE-buckets.csv" ) then
    echo "$ARBASE-buckets.csv does not exists; run $0:h/mkbuckets $ALLROWS:r"
else if ( ! -e "$OUTPUT" ) then
    echo "STAT: creating $OUTPUT"
    # only calculating numeric stats (freq must be last to flatten data)
    set operations = ('min' 'max' 'mean' 'median' 'stdev' 'count' 'freq')
    set opnames = `echo $operations | sed "s/ /,/g"`

    # start output
    echo "classifier,day,ampm,$opnames""1,f1num,freq2,f2num,freq3,f3num,freq4,fnum4,freq5,fnum5" >! "$OUTPUT"

    # calculate for all days
    set i = ALL
    foreach j ( AM PM )
	echo -n "STAT: calculating $j for all days -"
	echo -n '"'"$classifier"'","'"$i"'","'"$j"'"' >> "$OUTPUT"
	foreach k ( $operations )
	    echo -n "," >> "$OUTPUT"
	    set noglob
	    # fix count
	    if ($k == count) then
		set h = `csvgrep -c 'classifier' -m "$classifier" "$ARBASE"-class-values.csv > ! /tmp/$0:t.$$; csvjoin -c 'id,id' /tmp/$0:t.$$ "$ARBASE"-buckets.csv | csvgrep -c 'ampm' -m "$j" | csvcut -c "$bucket" | csvstat --$k | sed 's/Row count: \(.*\)/"\1"/'`
	    else
		set h = `csvgrep -c 'classifier' -m "$classifier" "$ARBASE"-class-values.csv > ! /tmp/$0:t.$$; csvjoin -c 'id,id' /tmp/$0:t.$$ "$ARBASE"-buckets.csv | csvgrep -c 'ampm' -m "$j" | csvcut -c "$bucket" | csvstat --$k | sed 's/"//g' | sed 's/\(.*\)/"\1"/'`
	    endif
	    # flatten frequency
	    if ($k == freq) then
		set h = `echo "$h" | sed 's/"{ \([^:]*\): \([^,]*\), \([^:]*\): \([^,]*\), \([^:]*\): \([^,]*\), \([^:]*\): \([^,]*\), \([^:]*\): \([^,]*\) }"/"\1","\2","\3","\4","\5","\6","\7","\8","\9","\10"/'`
	    endif
	    echo -n "$h" >> "$OUTPUT"
	    unset noglob
	    rm /tmp/$0:t.$$
	    echo -n " $k"
	end
	echo >> "$OUTPUT"
	echo
    end

    # calculate for each day
    foreach i ( Sunday Monday Tuesday Wednesday Thursday Friday Saturday )
	foreach j ( AM PM )
	    echo -n "STAT: calculating $j for $i -"
	    echo -n '"'"$classifier"'","'"$i"'","'"$j"'"' >> "$OUTPUT"
	    foreach k ( $operations )
		echo -n "," >> "$OUTPUT"
		set noglob
		# fix count
		if ($k == count) then
		    set h = `csvgrep -c 'classifier' -m "$classifier" "$ARBASE"-class-values.csv > ! /tmp/$0:t.$$; csvjoin -c 'id,id' /tmp/$0:t.$$ "$ARBASE"-buckets.csv | csvgrep -c 'ampm' -m "$j" | csvcut -c "$bucket" | csvstat --$k | sed 's/Row count: \(.*\)/"\1"/'`
		else
		    set h = `csvgrep -c 'classifier' -m "$classifier" "$ARBASE"-class-values.csv > ! /tmp/$0:t.$$; csvjoin -c 'id,id' /tmp/$0:t.$$ "$ARBASE"-buckets.csv | csvgrep -c 'ampm' -m "$j" | csvcut -c "$bucket" | csvstat --$k | sed 's/"//g' | sed 's/\(.*\)/"\1"/'`
		endif
		# flatten frequency
		if ($k == freq) then
		    set h = `echo "$h" | sed 's/"{ \([^:]*\): \([^,]*\), \([^:]*\): \([^,]*\), \([^:]*\): \([^,]*\), \([^:]*\): \([^,]*\), \([^:]*\): \([^,]*\) }"/"\1","\2","\3","\4","\5","\6","\7","\8","\9","\10"/'`
		endif
		echo -n "$h" >> "$OUTPUT"
		unset noglob
		rm /tmp/$0:t.$$
		echo -n " $k"
	    end
	    echo  >> "$OUTPUT"
	    echo
	end
    end
else
    echo "$OUTPUT exists"
endif
